{"version":3,"sources":["App.module.css","components/Filter/Filter.module.css","redux/actions.js","redux/operations.js","components/ContactForm/ContactForm.jsx","redux/selectors.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","axios","defaults","baseURL","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","handleInput","event","currentTarget","value","className","style","onSubmit","preventDefault","contact","post","then","data","catch","error","addContact","label","input","onChange","type","pattern","title","required","button","getFilter","state","contacts","filter","Filter","createSelector","items","normalizedFilter","toLowerCase","includes","useSelector","e","target","ContactList","list","visibleContacts","useEffect","get","map","id","listItem","listItemName","listItemNumber","onClick","delete","deleteContact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","payload","find","alert","isLoading","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,qB,mBCA1BD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,0JCE3CC,EAAsBC,YAAa,gCACnCC,EAAsBD,YAAa,gCACnCE,EAAoBF,YAAa,8BAEjCG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAkBL,YAAa,4BAE/BM,EAAuBN,YAClC,iCAEWO,EAAuBP,YAClC,iCAEWQ,EAAqBR,YAAa,+BAYlCS,EAAiBT,YAAa,2BChB3CU,IAAMC,SAASC,QAAU,wBAEzB,I,8BCJe,SAASC,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAAWC,cAEXC,EAAc,SAACC,GACnB,MAAwBA,EAAMC,cAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,OAAQT,GACN,IAAK,OACHC,EAAQQ,GACR,MACF,IAAK,SACHN,EAAUM,GACV,MACF,QACE,SAgBN,OACE,uBAAMC,UAAWC,IAAMb,YAAac,SARjB,SAACL,GACpBA,EAAMM,iBAENT,EDhBe,SAACJ,EAAME,GAAP,OAAkB,SAACE,GACpC,IAAMU,EAAU,CACdd,OACAE,UAGFE,EAAShB,KAETO,IACGoB,KAAK,YAAaD,GAClBE,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcb,EAASf,EAAkB4B,OAC9CC,OAAM,SAACC,GAAD,OAAWf,EAASd,EAAgB6B,QCKlCC,CAAW,CAAEpB,OAAME,YAP5BD,EAAQ,IACRE,EAAU,KAWV,UACE,uBAAOO,UAAWC,IAAMU,MAAxB,kBACA,uBACEX,UAAWC,IAAMW,MACjBb,MAAOT,EACPuB,SAAUjB,EACVkB,KAAK,OACLxB,KAAK,OACLyB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,IAEV,uBAAOjB,UAAWC,IAAMU,MAAxB,oBACA,uBACEX,UAAWC,IAAMW,MACjBb,MAAOP,EACPqB,SAAUjB,EACVkB,KAAK,MACLxB,KAAK,SACLyB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,IAEV,wBAAQH,KAAK,SAASd,UAAWC,IAAMiB,OAAvC,4B,6BChEOC,EAAY,SAACC,GAAD,OAAWA,EAAMC,SAASC,QC6BpCC,GDzBgBC,YAC7B,CANyB,SAACJ,GAAD,OAAWA,EAAMC,SAASI,OAMrCN,IACd,SAACE,EAAUC,GACT,IAAMI,EAAmBJ,EAAOK,cAEhC,OAAON,EAASC,QAAO,qBAAGhC,KACnBqC,cAAcC,SAASF,SCJnB,WACb,IAAMJ,EAASO,YAAYV,GACrBzB,EAAWC,cACjB,OACE,gCACE,oBAAIK,UAAWC,IAAMe,MAArB,mCACA,uBACEF,KAAK,OACLxB,KAAK,SACLS,MAAOuB,EACPT,SAAU,SAACiB,GAAD,OAAOpC,EAASV,EAAe8C,EAAEC,OAAOhC,SAElDC,UAAWC,IAAMW,a,gBCXV,SAASoB,IACtB,IAAMC,EAAOJ,aAAY,oBAAGR,SAAYI,EAAf,EAAeA,MAAOH,EAAtB,EAAsBA,OAAtB,OACvBY,EAAgBT,EAAOH,MAEnB5B,EAAWC,cAGjB,OAFAwC,qBAAU,kBAAMzC,GJAU,SAACA,GAC3BA,EAASpB,KACTW,IACGmD,IAAI,aACJ9B,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcb,EAASlB,EAAoB+B,OAChDC,OAAM,SAACC,GAAD,OAAWf,EAASjB,EAAkBgC,YILJ,CAACf,IAG1C,oBAAIM,UAAWC,IAAMgC,KAArB,SACGA,EAAKI,KAAI,gBAAGC,EAAH,EAAGA,GAAIhD,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACR,qBAAaQ,UAAWC,IAAMsC,SAA9B,UACE,uBAAMvC,UAAWC,IAAMuC,aAAvB,UAAsClD,EAAtC,OACA,sBAAMU,UAAWC,IAAMwC,eAAvB,SAAwCjD,IACxC,wBACEsB,KAAK,SACLd,UAAWC,IAAMiB,OAEjBwB,QAAS,kBAAMhD,EJUL,SAAC4C,GAAD,OAAQ,SAAC5C,GAC7BA,EAASb,KAETI,IACG0D,OADH,mBACsBL,IACnBhC,MAAK,kBAAMZ,EAASZ,EAAqBwD,OACzC9B,OAAM,SAACC,GAAD,OAAWf,EAASX,EAAmB0B,QIhBdmC,CAAcN,KAJxC,sBAHOA,QA0BjB,IAAMJ,EAAkB,SAACb,EAAUC,GACjC,IAAMI,EAAmBJ,EAAOK,cAEhC,OAAON,EAASC,QAAO,qBAAGhC,KACnBqC,cAAcC,SAASF,OC3CjB,SAASmB,IACtB,OACE,qCACE,oBAAI7C,UAAWC,IAAMe,MAArB,uBACA,cAAC5B,EAAD,IACA,cAAC,EAAD,IACA,oBAAIY,UAAWC,IAAMe,MAArB,sBACA,cAACgB,EAAD,OCdN,I,MAYec,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,8CCWRtB,EAAQ6B,YAAc,IAAD,mBACxB9E,GAAsB,SAAC+E,EAAD,YAAMC,WADJ,cAExB7E,GAAoB,SAACyC,EAAD,GAAyB,IAAfoC,EAAc,EAAdA,QAC7B,IAAIpC,EAAMqC,MAAK,qBAAGnE,OAAoBkE,EAAQlE,QAI9C,MAAM,CAAEkE,GAAR,mBAAoBpC,IAHlBsC,MAAM,GAAD,OAAIF,EAAQlE,KAAZ,+BAJgB,cASxBR,GAAuB,SAACsC,EAAD,OAAUoC,EAAV,EAAUA,QAAV,OACtBpC,EAAME,QAAO,qBAAGgB,KAAgBkB,QAVT,IAarBlC,EAASgC,YAAc,GAAD,eACzBtE,GAAiB,SAACuE,EAAD,YAAMC,YAGpBG,EAAYL,aAAc,GAAD,mBAC5BhF,GAAsB,kBAAM,KADA,cAE5BE,GAAsB,kBAAM,KAFA,cAG5BC,GAAoB,kBAAM,KAHE,cAI5BC,GAAoB,kBAAM,KAJE,cAK5BC,GAAoB,kBAAM,KALE,cAM5BC,GAAkB,kBAAM,KANI,cAO5BC,GAAuB,kBAAM,KAPD,cAQ5BC,GAAuB,kBAAM,KARD,cAS5BC,GAAqB,kBAAM,KATC,IAYzB0B,EAAQ6C,YAAc,MAAD,mBACxB7E,GAAoB,SAAC8E,EAAD,YAAMC,WADF,cAExB5E,GAAkB,SAAC2E,EAAD,YAAMC,WAFA,cAGxBzE,GAAqB,SAACwE,EAAD,YAAMC,WAHH,IAMZI,cAAgB,CAC7BnC,QACAH,SACAqC,YACAlD,UCnBaoD,EAVDC,YAAe,CAC3BC,QAAS,CACP1C,SAAU2C,GAEZC,WAjBiB,SAACC,GAAD,OACjBA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,QAE3DC,OAAOC,MAaVC,UAAUC,ICxBZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUpB,MAAOA,EAAjB,SAEI,cAAChB,EAAD,QAINqC,SAASC,eAAe,SAK1BrC,K,kBCrBA1E,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,kBCAhJD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,SAAW,8BAA8B,aAAe,kCAAkC,eAAiB,oCAAoC,OAAS,+B","file":"static/js/main.f350bb69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__-GfWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\",\"title\":\"Filter_title__mtLuE\"};","// import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\n// const addContact = createAction(\"contacts/add\", (name, number) => ({\n//   payload: {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   },\n// }));\n\n// const deleteContact = createAction(\"contacts/delete\");\n\nexport const filterContacts = createAction(\"contacts/filterContacts\");\n\n//redux\n\n// const addContact = (name, number) => ({\n//   type: types.ADD,\n//   payload: {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   },\n// });\n\n// const deleteContact = (id) => ({\n//   type: types.DELETE,\n//   payload: id,\n// });\n\n// const filterContacts = (value) => ({\n//   type: types.FILTER,\n//   payload: value,\n// });\n","import axios from \"axios\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./actions\";\n\naxios.defaults.baseURL = \"http://localhost:3000\";\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactRequest());\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch((error) => dispatch(fetchContactError(error)));\n};\n\nconst addContact = (name, number) => (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error)));\n};\n\nconst deleteContact = (id) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n\nexport { addContact, deleteContact, fetchContacts };\n","import React from \"react\";\nimport { useState } from \"react\";\n\n// import { connect } from \"react-redux\";\n\n// import actions from \"../../redux/actions\";\nimport { addContact } from \"../../redux/operations\";\nimport { useDispatch } from \"react-redux\";\n// import PropTypes from \"prop-types\";\nimport style from \"./ContactForm.module.css\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleInput = (event) => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // onSubmit({ name, number });\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  return (\n    <form className={style.ContactForm} onSubmit={handleSubmit}>\n      <label className={style.label}>Name</label>\n      <input\n        className={style.input}\n        value={name}\n        onChange={handleInput}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n      <label className={style.label}>Number</label>\n      <input\n        className={style.input}\n        value={number}\n        onChange={handleInput}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n      />\n      <button type=\"submit\" className={style.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// ContactForm.propTypes = {\n//   addContact: PropTypes.func,\n// };\n\n// redux\n\n// const mapDispatchToProrps = (dispatch) => ({\n//   onSubmit: ({ name, number }) => dispatch(actions.addContact(name, number)),\n// });\n// export default connect(null, mapDispatchToProrps)(ContactForm);\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getLoading = (state) => state.contacts.isLoading;\nexport const getError = (state) => state.contacts.error;\n\nexport const visibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);","import React from \"react\";\nimport style from \"./Filter.module.css\";\n// import PropTypes from \"prop-types\";\n// import actions from \"../../redux/actions\";\n// import { connect } from \"react-redux\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/selectors\";\nimport { filterContacts } from \"../../redux/actions\";\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <h3 className={style.title}>Find contacts by name</h3>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={(e) => dispatch(filterContacts(e.target.value))}\n        // onChange={onChange}\n        className={style.input}\n      />\n    </div>\n  );\n};\n\n// Filter.propTypes = {\n//   filter: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n\nexport default Filter;\n\n// redux\n\n// const mapStateToProps = (state) => ({\n//   value: state.contacts.filter,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onChange: (e) => dispatch(actions.filterContacts(e.target.value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport style from \"./ContactList.module.css\";\n// import PropTypes from \"prop-types\";\n// import actions from \"../../redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { deleteContact, fetchContacts } from \"../../redux/operations\";\n\n// const ContactList = ({ contacts, onDelete }) => {\n\nexport default function ContactList() {\n  const list = useSelector(({ contacts: { items, filter } }) =>\n    visibleContacts(items, filter)\n  );\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  return (\n    <ul className={style.list}>\n      {list.map(({ id, name, number }) => (\n        <li key={id} className={style.listItem}>\n          <span className={style.listItemName}>{name}:</span>\n          <span className={style.listItemNumber}>{number}</span>\n          <button\n            type=\"button\"\n            className={style.button}\n            // onClick={() => onDelete(id)}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.oneOfType([\n//     PropTypes.string,\n//     PropTypes.number,\n//     PropTypes.array,\n//   ]),\n//   onClick: PropTypes.func.isRequired,\n// };\n\nconst visibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\n// redux\n\n// const visibleContacts = (contacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n//   return contacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\n//   contacts: visibleContacts(items, filter),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onDelete: (id) => dispatch(actions.deleteContact(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport style from \"./App.module.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport PropTypes from \"prop-types\";\n\nexport default function App() {\n  return (\n    <>\n      <h1 className={style.title}>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <h2 className={style.title}>Contacts</h2>\n      <ContactList />\n    </>\n  );\n}\n\nApp.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// redux-toolkit\n\nimport { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n// import actions from \"./actions\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContacts,\n} from \"./actions\";\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => {\n    if (state.find(({ name }) => name === payload.name)) {\n      alert(`${payload.name} is already in contacts`);\n      return;\n    }\n    return [payload, ...state];\n  },\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n\n// redux;\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       if (\n//         state.find(\n//           (contact) => contact.name.toLowerCase() === payload.name.toLowerCase()\n//         )\n//       ) {\n//         alert(`${payload.name} is already in contacts`);\n\n//       }\n//     return [payload, ...state];\n\n//     case types.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case types.FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default combineReducers({\n//   items,\n//   filter,\n// });\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport contactsReducer from \"./reducer\";\n\nconst middleware = (getDefaultMiddleware) =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }).concat(logger);\n\n// const contactsPersistConfig = {\n//   key: \"items\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n\n// redux\n\n// import { createStore, combineReducers } from 'redux';\n// import contactsReducer from './reducer';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n// const store = createStore(rootReducer, composeWithDevTools());\n// export default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.js\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1zvAA\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"listItem\":\"ContactList_listItem__29Cbr\",\"listItemName\":\"ContactList_listItemName__39F1_\",\"listItemNumber\":\"ContactList_listItemNumber__3d8DW\",\"button\":\"ContactList_button__1RuFy\"};"],"sourceRoot":""}